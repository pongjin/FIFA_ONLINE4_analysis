{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1rLMMUizjhF-nswv-jlH-wQS-OqkP9OrF","timestamp":1681433780467},{"file_id":"18rzgrAVcVYmDT3Y2xjKXPwZaAHVdizwk","timestamp":1681111733534}],"machine_shape":"hm","collapsed_sections":["JWzzR3mF1Gnr"],"toc_visible":true,"mount_file_id":"1HqVKty_0I_Jbi_V05OurGB6rp4cZQsIu","authorship_tag":"ABX9TyMhS9Acw1e257go9pBW1aBn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"gpuClass":"standard"},"cells":[{"cell_type":"markdown","source":["# 피파 전력분석실 개선 프로젝트를 위한 표본 수집 코드\n","***\n","대상 : 유저 1000명\n","(API 일일 호출량으로 인해 사전에 찾아둔 매치 데이터에서 조건에 맞는 유저 ID 추출)  \n","## 조건\n","1. 23년에 챌린저 등급 이상 달성한 유저\n","1. 최근 20경기 중 정상종료가 최소 10경기 이상인 유저\n","3. 누락 없는 매치 : 슈팅횟수, 드리블거리, 패스횟수 1회 이상"],"metadata":{"id":"9tS08IdnEdIP"}},{"cell_type":"markdown","source":["# 기본설정"],"metadata":{"id":"7EYr5ACnHXpL"}},{"cell_type":"code","source":["# packages\n","import json\n","import requests # 웹으로 요청하기 위해 필요함\n","import re\n","\n","import pandas as pd\n","import numpy as np\n","\n","import time"],"metadata":{"id":"oM11nVMZEzSW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# api key 할당\n","api_key = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJYLUFwcC1SYXRlLUxpbWl0IjoiNTAwOjEwIiwiYWNjb3VudF9pZCI6IjQxOTY1MzAwNCIsImF1dGhfaWQiOiIyIiwiZXhwIjoxNjk2MTY3NjEzLCJpYXQiOjE2ODA2MTU2MTMsIm5iZiI6MTY4MDYxNTYxMywic2VydmljZV9pZCI6IjQzMDAxMTQ4MSIsInRva2VuX3R5cGUiOiJBY2Nlc3NUb2tlbiJ9.o0LLbN5McbgsFrXA8aq8_iczl1hrATz-4QhGTPLBeCQ'"],"metadata":{"id":"uQSv7sEWFrmT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 유저 닉네임을 통해 accessid 발급\n","user_params = { 'nickname' : '분석1호'}\n","headers = {'Authorization' : api_key}\n","user_info = requests.get('https://api.nexon.co.kr/fifaonline4/v1.0/users?', params = user_params, headers = headers)\n","user_data = user_info.json()\n","\n","print(user_data) # id, 별명, 레벨 조회\n","\n","accessid = user_data['accessId'] # accessId 할당"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t1LdcbULFtez","executionInfo":{"status":"ok","timestamp":1681705772601,"user_tz":-540,"elapsed":428,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"d5bd811f-f995-4678-9b2e-cf127a2e0b59"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'accessId': '2b03e1ae8e04029a8c6b90a5', 'nickname': '분석1호', 'level': 67}\n"]}]},{"cell_type":"markdown","source":["#  API 호출\n","***\n","앞서 데이터_수집1 에서 찾은 코드 내 유저 ID 추출"],"metadata":{"id":"lEjv4xyvxkeX"}},{"cell_type":"code","source":["data = pd.read_csv('/content/drive/MyDrive/평진/데이터분석/핍파/df.csv',encoding='cp949',index_col=0)\n","data = data[data.grade.apply(lambda x : len(x))>0]\n","data = data[data.grade.apply(lambda x : len(re.findall('(800|900|1000|1100|1200|1300)',x))>0)]\n","data = data[data.grade.apply(lambda x : len(re.findall('(2023-)',x))>0)]\n","data.shape"],"metadata":{"id":"ZiFBpXO-9GmZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681712174870,"user_tz":-540,"elapsed":3506,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"9df36ee0-459d-42f0-ffe3-32e4667cd6bc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(7053, 94)"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# 중복 제거\n","id_list = list(data.accessId.unique())\n","len(id_list)"],"metadata":{"id":"o1TVh_SDSYnR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["```\n","code1\n","유저 당 최근 20판을 가져와서\n","    리스트에 저장\n","\n","code2\n","매치 아이디마다 상세기록을 추출해서\n","    하나의 데이터프레임으로 통합\n","```\n"],"metadata":{"id":"Wovd4cVLTMuo"}},{"cell_type":"code","source":["# 유저 별 최근 20 경기의 매치ID 추출\n","matchtype = 50\n","offset = 0\n","limit = 20\n","match_list = []\n","for accessid in id_list:\n","    match_info = requests.get(f'https://api.nexon.co.kr/fifaonline4/v1.0/users/{accessid}/matches?matchtype={matchtype}&offset={offset}&limit={limit}', headers = headers)\n","    match_list.append(match_info.json())\n","len(match_list)"],"metadata":{"id":"0046ID33TCyq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 20경기 미만 호출 유저 제거\n","match_list = [x for x in match_list if len(x)==20]\n","len(match_list)"],"metadata":{"id":"rO9j3aoOcRfc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 매치 상세 기록 조회 데이터 부르기\n","matches = pd.DataFrame()\n","\n","for player in match_list:\n","    for matchid in player:\n","        match_info = requests.get(f'https://api.nexon.co.kr/fifaonline4/v1.0/matches/{matchid}', headers = headers)\n","        matches = pd.concat([matches, pd.DataFrame(match_info.json())], axis = 0)\n","    \n","matches # 매치 상세 기록 데이터"],"metadata":{"id":"9RExy3ZW1WHS","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1681441590123,"user_tz":-540,"elapsed":4738305,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"38c03159-da58-41f2-c690-d4bab7f45f51"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     matchId            matchDate  matchType  \\\n","0   6430c714a4ebcc072d13f3e7  2023-04-08T10:54:55         50   \n","1   6430c714a4ebcc072d13f3e7  2023-04-08T10:54:55         50   \n","0   642dcb56dc1ac4544c53deb8  2023-04-06T04:37:10         50   \n","1   642dcb56dc1ac4544c53deb8  2023-04-06T04:37:10         50   \n","0   642c09958e38507a9ae58bc4  2023-04-04T20:37:05         50   \n","..                       ...                  ...        ...   \n","1   64318a17392ff1edc5f969c6  2023-04-09T00:47:22         50   \n","0   6431878a7a69991d13ebd433  2023-04-09T00:36:20         50   \n","1   6431878a7a69991d13ebd433  2023-04-09T00:36:20         50   \n","0   643184d172339105d385d842  2023-04-09T00:25:18         50   \n","1   643184d172339105d385d842  2023-04-09T00:25:18         50   \n","\n","                                            matchInfo  \n","0   {'accessId': 'a7bfe14794ec5114d6a1560c', 'nick...  \n","1   {'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...  \n","0   {'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...  \n","1   {'accessId': '64629416555b6b09af224286', 'nick...  \n","0   {'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...  \n","..                                                ...  \n","1   {'accessId': 'edda0e0a4f881934dcd72d31', 'nick...  \n","0   {'accessId': 'eb39831a2cf570132b19b8a9', 'nick...  \n","1   {'accessId': '5e969a9990baa0fd666fc8c7', 'nick...  \n","0   {'accessId': '5e969a9990baa0fd666fc8c7', 'nick...  \n","1   {'accessId': '71f6b024a238fabf9e5f18db', 'nick...  \n","\n","[59618 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-4065aaba-97ad-4cbf-955a-44c2e817b502\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>matchId</th>\n","      <th>matchDate</th>\n","      <th>matchType</th>\n","      <th>matchInfo</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6430c714a4ebcc072d13f3e7</td>\n","      <td>2023-04-08T10:54:55</td>\n","      <td>50</td>\n","      <td>{'accessId': 'a7bfe14794ec5114d6a1560c', 'nick...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6430c714a4ebcc072d13f3e7</td>\n","      <td>2023-04-08T10:54:55</td>\n","      <td>50</td>\n","      <td>{'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>642dcb56dc1ac4544c53deb8</td>\n","      <td>2023-04-06T04:37:10</td>\n","      <td>50</td>\n","      <td>{'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>642dcb56dc1ac4544c53deb8</td>\n","      <td>2023-04-06T04:37:10</td>\n","      <td>50</td>\n","      <td>{'accessId': '64629416555b6b09af224286', 'nick...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>642c09958e38507a9ae58bc4</td>\n","      <td>2023-04-04T20:37:05</td>\n","      <td>50</td>\n","      <td>{'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>64318a17392ff1edc5f969c6</td>\n","      <td>2023-04-09T00:47:22</td>\n","      <td>50</td>\n","      <td>{'accessId': 'edda0e0a4f881934dcd72d31', 'nick...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>6431878a7a69991d13ebd433</td>\n","      <td>2023-04-09T00:36:20</td>\n","      <td>50</td>\n","      <td>{'accessId': 'eb39831a2cf570132b19b8a9', 'nick...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6431878a7a69991d13ebd433</td>\n","      <td>2023-04-09T00:36:20</td>\n","      <td>50</td>\n","      <td>{'accessId': '5e969a9990baa0fd666fc8c7', 'nick...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>643184d172339105d385d842</td>\n","      <td>2023-04-09T00:25:18</td>\n","      <td>50</td>\n","      <td>{'accessId': '5e969a9990baa0fd666fc8c7', 'nick...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>643184d172339105d385d842</td>\n","      <td>2023-04-09T00:25:18</td>\n","      <td>50</td>\n","      <td>{'accessId': '71f6b024a238fabf9e5f18db', 'nick...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>59618 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4065aaba-97ad-4cbf-955a-44c2e817b502')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4065aaba-97ad-4cbf-955a-44c2e817b502 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4065aaba-97ad-4cbf-955a-44c2e817b502');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["# 전처리"],"metadata":{"id":"jXMYvljw449Y"}},{"cell_type":"markdown","source":["## 결과가 큰 차이가 나지 않는 경기 선별\n","3점차 이상의 경기에서는 자신의 플레이스타일이 나오기 쉽지 않을것으로 판단 >> 근거 제시하자."],"metadata":{"id":"EtuKkJm3-Sm_"}},{"cell_type":"code","source":["my_match = matches[matches.index == 0]\n","your_match = matches[matches.index != 0]\n","\n","my_match.drop_duplicates(['matchId'],inplace=True)\n","your_match.drop_duplicates(['matchId'],inplace=True)\n","\n","full_match = pd.merge(my_match,your_match,on='matchId',how='left')\n","\n","full_match = full_match.dropna()\n","# score\n","full_match['home_score'] = full_match.matchInfo_x.apply(lambda x : x['shoot']['goalTotalDisplay'])\n","full_match['away_score'] = full_match.matchInfo_y.apply(lambda x : x['shoot']['goalTotalDisplay'])\n","full_match['diff'] = abs(full_match.home_score - full_match.away_score)"],"metadata":{"id":"6Ji113P19akp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["full_match['diff'].hist()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"zz8vzL8SLXAX","executionInfo":{"status":"ok","timestamp":1681443882803,"user_tz":-540,"elapsed":506,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"7f441bf3-9987-4b48-f5aa-27ae47c6d6f3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":30},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["full_list = list(full_match.loc[full_match['diff']<4,'matchId'])\n","\n","matches2 = matches[matches.matchId.apply(lambda x : x in full_list)]"],"metadata":{"id":"qyn0OMCC_NEO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 추가 조건\n","0. 정상종료된 데이터\n","1. 모든 데이터가 불러와져야함\n","2. 슛 패스 등 1회 이상\n","3. 중복 제거"],"metadata":{"id":"oHCeAG1F_tcv"}},{"cell_type":"code","source":["#0\n","matches2.reset_index(drop=True, inplace=True)\n","data = matches2[matches2.matchInfo.apply(lambda x : x['matchDetail']['matchEndType']==0)]\n","#1\n","data = data[data.matchInfo.apply(lambda x : len(x['player'])>13)]\n","#2\n","data.reset_index(drop=True, inplace=True)\n","data = data[data.matchInfo.apply(lambda x : x['matchDetail']['possession'])>0.1]\n","data = data[data.matchInfo.apply(lambda x : x['shoot']['shootTotal'])>0]\n","data = data[data.matchInfo.apply(lambda x : x['matchDetail']['dribble'])>10]\n","data = data[data.matchInfo.apply(lambda x : x['pass']['passTry'])>10]\n","#3\n","data.reset_index(drop=True, inplace=True)\n","data.shape"],"metadata":{"id":"MhYnCR1tvDzc","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1681348613429,"user_tz":-540,"elapsed":363,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"d5d7d3f0-c1e4-4ff3-f0f1-261a6d7445e6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    matchId            matchDate  matchType  \\\n","0  642c0ef1335529ab4c0c9235  2023-04-04T20:59:27         40   \n","1  642c0ef1335529ab4c0c9235  2023-04-04T20:59:27         40   \n","2  642c0ef1335529ab4c0c9235  2023-04-04T20:59:27         40   \n","3  642c0ef1335529ab4c0c9235  2023-04-04T20:59:27         40   \n","4  642c0ef00debee95f923ae75  2023-04-04T20:59:26         40   \n","\n","                                           matchInfo  \n","0  {'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...  \n","1  {'accessId': '82a1af3c720243e5db315de3', 'nick...  \n","2  {'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...  \n","3  {'accessId': '82a1af3c720243e5db315de3', 'nick...  \n","4  {'accessId': '24f8d6940d7412b5decdb327', 'nick...  "],"text/html":["\n","  <div id=\"df-bddb20bf-d1d6-4360-9cc0-1a5b4b245062\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>matchId</th>\n","      <th>matchDate</th>\n","      <th>matchType</th>\n","      <th>matchInfo</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>642c0ef1335529ab4c0c9235</td>\n","      <td>2023-04-04T20:59:27</td>\n","      <td>40</td>\n","      <td>{'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>642c0ef1335529ab4c0c9235</td>\n","      <td>2023-04-04T20:59:27</td>\n","      <td>40</td>\n","      <td>{'accessId': '82a1af3c720243e5db315de3', 'nick...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>642c0ef1335529ab4c0c9235</td>\n","      <td>2023-04-04T20:59:27</td>\n","      <td>40</td>\n","      <td>{'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>642c0ef1335529ab4c0c9235</td>\n","      <td>2023-04-04T20:59:27</td>\n","      <td>40</td>\n","      <td>{'accessId': '82a1af3c720243e5db315de3', 'nick...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>642c0ef00debee95f923ae75</td>\n","      <td>2023-04-04T20:59:26</td>\n","      <td>40</td>\n","      <td>{'accessId': '24f8d6940d7412b5decdb327', 'nick...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bddb20bf-d1d6-4360-9cc0-1a5b4b245062')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bddb20bf-d1d6-4360-9cc0-1a5b4b245062 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bddb20bf-d1d6-4360-9cc0-1a5b4b245062');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["# 결측 확인\n","data.matchInfo.apply(lambda x : x['matchDetail']['matchResult']).value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BXOdvezOuhbt","executionInfo":{"status":"ok","timestamp":1681446410647,"user_tz":-540,"elapsed":464,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"e19fd2f9-a148-442e-d746-e0d2e85f67b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["승    9995\n","패    9366\n","무    4898\n","Name: matchInfo, dtype: int64"]},"metadata":{},"execution_count":90}]},{"cell_type":"markdown","source":["## 변수 생성"],"metadata":{"id":"ldbsvryw5M4u"}},{"cell_type":"code","source":["# 경기 결과\n","data['accessId'] = data.matchInfo.apply(lambda x : x['accessId']) \n","data['possession'] = data.matchInfo.apply(lambda x : x['matchDetail']['possession']) /100\n","data['nickname'] = data.matchInfo.apply(lambda x : x['nickname']) \n","data['matchResult'] = data.matchInfo.apply(lambda x : x['matchDetail']['matchResult'])\n","\n","# 슛\n","data['shootInPenalty'] = data.matchInfo.apply(lambda x : len( [ y for y in x['shootDetail'] if ( y['type'] in [1,2,4,5,6,10] ) & ( y['inPenalty']==True ) ] ) )\n","data['shootHeading'] = data.matchInfo.apply(lambda x : len( [ y for y in x['shootDetail'] if (y['type'] in [3,7]) & ( y['inPenalty']==True ) ] ) )\n","data['shootOutPenalty'] = data.matchInfo.apply(lambda x : len( [ y for y in x['shootDetail'] if ( y['inPenalty'] == False ) & ( y['type']  not in [8] ) ] ) )\n","data['shootTotal'] = data['shootInPenalty'] + data['shootOutPenalty'] + data['shootHeading']\n","data['in_rate'] = (data['shootInPenalty'] + data['shootHeading']) / data['shootTotal']\n","data['out_rate'] = data['shootOutPenalty'] / data['shootTotal']\n","data['heading_rate'] = data['shootHeading'] / data['shootTotal'] # 골대 안 슈팅 중\n","\n","# 패스\n","data['passTry'] = data.matchInfo.apply(lambda x : x['pass']['passTry'])\n","data['shortPassTry'] = data.matchInfo.apply(lambda x : x['pass']['shortPassTry']) + data.matchInfo.apply(lambda x : x['pass']['drivenGroundPassTry'])\n","data['longpassTry'] = data.matchInfo.apply(lambda x : x['pass']['longPassTry']) + data.matchInfo.apply(lambda x : x['pass']['bouncingLobPassTry']) + data.matchInfo.apply(lambda x : x['pass']['drivenGroundPassTry'])\n","data['throughpass'] = data.matchInfo.apply(lambda x : x['pass']['throughPassTry']) + data.matchInfo.apply(lambda x : x['pass']['lobbedThroughPassTry']) \n","data['short_rate'] = data['shortPassTry'] / data['passTry']\n","data['long_rate'] = data['longpassTry'] / data['passTry']\n","data['thr_rate'] = data['throughpass'] / data['passTry']\n","data['directpass'] = data['longpassTry'] + data['throughpass']\n","data['direct_rate'] = data['directpass'] / data['passTry']\n","\n","#포지션 별\n","## 슛\n","data['center_fw_shoot'] = data.matchInfo.apply(lambda x : sum( [ y['status']['shoot'] for y in x['player'] if y['spPosition'] in [20,21,22,24,25,26] ] ) )\n","data['side_fw_shoot'] = data.matchInfo.apply(lambda x : sum( [ y['status']['shoot'] for y in x['player'] if y['spPosition'] in [12,16,17,19,23,27] ] ) )\n","data['center_mf_shoot'] = data.matchInfo.apply(lambda x : sum( [ y['status']['shoot'] for y in x['player'] if y['spPosition'] in [9,10,11,13,14,15,18] ] ) )\n","## 패스\n","data['center_fw_pass'] = data.matchInfo.apply(lambda x : sum( [ y['status']['passTry'] for y in x['player'] if y['spPosition'] in [20,21,22,24,25,26] ] ) )\n","data['side_fw_pass'] = data.matchInfo.apply(lambda x : sum( [ y['status']['passTry'] for y in x['player'] if y['spPosition'] in [12,16,17,19,23,27] ] ) )\n","data['center_mf_pass'] = data.matchInfo.apply(lambda x : sum( [ y['status']['passTry'] for y in x['player'] if y['spPosition'] in [9,10,11,13,14,15,18] ] ) )\n","data['side_df_pass'] = data.matchInfo.apply(lambda x : sum( [ y['status']['passTry'] for y in x['player'] if y['spPosition'] in [2,3,7,8] ] ) )\n","data['center_df_pass'] = data.matchInfo.apply(lambda x : sum( [ y['status']['passTry'] for y in x['player'] if y['spPosition'] in [1,4,5,6] ] ) )\n","data['line1_pass'] = data.matchInfo.apply(lambda x : sum( [ y['status']['passTry'] for y in x['player'] if y['spPosition'] in [20,21,22,23,24,25,26,27] ] ) )\n","data['line2_pass'] = data.matchInfo.apply(lambda x : sum( [ y['status']['passTry'] for y in x['player'] if y['spPosition'] in [9,10,11,12,13,14,15,16,17,18,19] ] ) )\n","## 드리블\n","data['center_fw_dribble'] = data.matchInfo.apply(lambda x : sum( [ y['status']['dribbleTry'] for y in x['player'] if y['spPosition'] in [20,21,22,24,25,26] ] ) )\n","data['side_fw_dribble'] = data.matchInfo.apply(lambda x : sum( [ y['status']['dribbleTry'] for y in x['player'] if y['spPosition'] in [12,16,17,19,23,27] ] ) )\n","data['center_mf_dribble'] = data.matchInfo.apply(lambda x : sum( [ y['status']['dribbleTry'] for y in x['player'] if y['spPosition'] in [9,10,11,13,14,15,18] ] ) )\n","data['side_df_dribble'] = data.matchInfo.apply(lambda x : sum( [ y['status']['dribbleTry'] for y in x['player'] if y['spPosition'] in [2,3,7,8] ] ) )\n","data['line1_dribble'] = data.matchInfo.apply(lambda x : sum( [ y['status']['dribbleTry'] for y in x['player'] if y['spPosition'] in [20,21,22,23,24,25,26,27] ] ) )\n","data['line2_dribble'] = data.matchInfo.apply(lambda x : sum( [ y['status']['dribbleTry'] for y in x['player'] if y['spPosition'] in [9,10,11,12,13,14,15,16,17,18,19] ] ) )\n","## 볼소유\n","data['center_fw_posses'] = data.matchInfo.apply(lambda x : sum( [ y['status']['ballPossesionTry'] for y in x['player'] if y['spPosition'] in [20,21,22,24,25,26] ] ) )\n","data['side_fw_posses'] = data.matchInfo.apply(lambda x : sum( [ y['status']['ballPossesionTry'] for y in x['player'] if y['spPosition'] in [12,16,17,19,23,27] ] ) )\n","data['center_mf_posses'] = data.matchInfo.apply(lambda x : sum( [ y['status']['ballPossesionTry'] for y in x['player'] if y['spPosition'] in [9,10,11,13,14,15,18] ] ) )\n","data['side_df_posses'] = data.matchInfo.apply(lambda x : sum( [ y['status']['ballPossesionTry'] for y in x['player'] if y['spPosition'] in [2,3,7,8] ] ) )\n","data['center_df_posses'] = data.matchInfo.apply(lambda x : sum( [ y['status']['ballPossesionTry'] for y in x['player'] if y['spPosition'] in [1,4,5,6] ] ) )\n","data['line1_posses'] = data.matchInfo.apply(lambda x : sum( [ y['status']['ballPossesionTry'] for y in x['player'] if y['spPosition'] in [20,21,22,23,24,25,26,27] ] ) )\n","data['line2_posses'] = data.matchInfo.apply(lambda x : sum( [ y['status']['ballPossesionTry'] for y in x['player'] if y['spPosition'] in [9,10,11,12,13,14,15,16,17,18,19] ] ) )\n","## 공격의 수비 가담\n","data['intercepth_fw'] = data.matchInfo.apply(lambda x : sum( [ y['status']['intercept'] for y in x['player'] if y['spPosition'] in [12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27] ] ) )\n","data['tackle_fw'] = data.matchInfo.apply(lambda x : sum( [ y['status']['tackleTry'] for y in x['player'] if y['spPosition'] in [12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27] ] ) )\n","data['tackle'] = data.matchInfo.apply(lambda x : sum( [ y['status']['tackleTry'] for y in x['player'] ] ) )\n","data['intercept'] = data.matchInfo.apply(lambda x : sum( [ y['status']['intercept'] for y in x['player'] ] ) )\n","data['defence_fw_rate'] = (data['tackle_fw'] + data['intercepth_fw']) / (data['intercept'] + data['tackle'])\n","data['defence_fw'] = data['tackle_fw'] + data['intercepth_fw']\n","data['defences'] = data['intercept'] + data['tackle']\n","\n","## (구)포지션 활용도\n","data['center_fw_use'] = data['center_fw_dribble'] + data['center_fw_pass'] + data['center_fw_posses']\n","data['center_mf_use'] = data['center_mf_dribble'] + data['center_mf_pass'] + data['center_mf_posses']\n","data['side_fw_use'] = data['side_fw_dribble'] + data['side_fw_pass'] + data['side_fw_posses']\n","data['side_df_use'] = data['side_df_dribble'] + data['side_df_pass'] + data['side_df_posses']\n","data['side_use'] = data['side_fw_use'] + data['side_df_use']\n","data['use_all'] = data['center_fw_use'] + data['center_mf_use'] + data['side_fw_use'] + data['side_df_use']\n","data['center_fw_rate'] = data['center_fw_use'] / data['use_all']\n","data['center_mf_rate'] = data['center_mf_use'] / data['use_all']\n","data['center_rate'] = data['center_mf_rate'] + data['center_fw_rate']\n","data['side_rate'] = data['side_use'] / data['use_all']\n","data['side_df_rate'] = data['side_df_use'] / data['side_use'] #측면 사용 중 \n","\n","data['all_use'] = data.matchInfo.apply(lambda x : sum( [ y['status']['passTry'] for y in x['player'] ] ) ) + data.matchInfo.apply(lambda x : sum( [ y['status']['dribbleTry'] for y in x['player'] ] ) ) + data.matchInfo.apply(lambda x : sum( [ y['status']['ballPossesionTry'] for y in x['player'] ] ) )\n","data['line1_use'] = data['line1_dribble'] + data['line1_pass'] + data['line1_posses']\n","data['line2_use'] = data['line2_dribble'] + data['line2_pass'] + data['line2_posses']\n","data['line1_rate'] = data['line1_use'] / data['all_use']\n","data['line2_rate'] = data['line2_use'] / data['all_use']\n","data['side_fw_rate'] = data['side_fw_use'] / (data['line1_use'] + data['line2_use']) #측면 사용 중 \n","\n","## 포메이션\n","data['df'] = data.matchInfo.apply(lambda x : len( [ y for y in x['player'] if y['spPosition'] in list(range(1,9)) ] ) )\n","data['mf'] = data.matchInfo.apply(lambda x : len( [ y for y in x['player'] if y['spPosition'] in list(range(9,20)) ] ) )\n","data['fw'] = data.matchInfo.apply(lambda x : len( [ y for y in x['player'] if y['spPosition'] in list(range(20,28)) ] ) )\n","data['center_fw'] = data.matchInfo.apply(lambda x : len( [ y for y in x['player'] if y['spPosition'] in [20,21,22,24,25,26] ] ) )\n","data['center_mf'] = data.matchInfo.apply(lambda x : len( [ y for y in x['player'] if y['spPosition'] in [9,10,11,13,14,15,18] ] ) )\n","data['side_fw'] = data.matchInfo.apply(lambda x : len( [ y for y in x['player'] if y['spPosition'] in [12,16,17,19,23,27] ] ) )\n","data['side_df'] = data.matchInfo.apply(lambda x : len( [ y for y in x['player'] if y['spPosition'] in [2,3,7,8] ] ) )\n","data['side'] = data['side_fw'] + data['side_df']\n","data['center'] = data['center_fw'] + data['center_mf']\n","data['line2'] = data.matchInfo.apply(lambda x : len( [ y for y in x['player'] if y['spPosition'] in [9,10,11,12,13,14,15,16,17,18,19] ] ) )\n","\n","## (신)포지션 활용도\n","data['center_fw_one'] = data['center_fw_use'] / data['center_fw']\n","data['center_mf_one'] = data['center_mf_use'] / data['center_mf']\n","data['side_fw_one'] = data['side_fw_use'] / data['side_fw']\n","data['side_df_one'] = data['side_df_use'] / data['side_df']\n","data['center_one'] = (data['center_fw_use'] + data['center_mf_use']) / (data['center_fw'] + data['center_mf'])\n","data['side_one'] = (data['side_fw_use'] + data['side_df_use']) / (data['side_fw'] + data['side_df'])\n","data['line2_one'] = data['line2_use'] / data['line2']"],"metadata":{"id":"Uv_9hGbP3BI6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 파생변수 생성"],"metadata":{"id":"KVzFP7mk-omH"}},{"cell_type":"code","source":["# 포메이션 설정\n","data['formation'] = 0\n","data.loc[(data['df'] == 5) & (data['mf'] == 3) & (data['fw'] == 2),'formation'] = '532'\n","data.loc[(data['df'] == 5) & (data['mf'] == 2) & (data['fw'] == 3),'formation'] = '523'\n","data.loc[(data['df'] == 4) & (data['mf'] == 5) & (data['fw'] == 1),'formation'] = '451'\n","data.loc[(data['df'] == 4) & (data['mf'] == 4) & (data['fw'] == 2),'formation'] = '442'\n","data.loc[(data['df'] == 4) & (data['mf'] == 3) & (data['fw'] == 3),'formation'] = '433'\n","data.loc[(data['df'] == 4) & (data['mf'] == 2) & (data['fw'] == 4),'formation'] = '424'\n","#data.loc[(data['df'] == 5) & (data['mf'] == 4) & (data['fw'] == 1),'formation'] = '541' 표본수가 100개도 안되는 포메이션\n","#data.loc[(data['df'] == 3) & (data['mf'] == 5) & (data['fw'] == 2),'formation'] = '352' 표본수가 100개도 안되는 포메이션\n","\n","# 이외 포메이션은 모두 제외\n","data = data.loc[data.formation!=0]\n","\n","data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zcKQ-dsbvbwf","executionInfo":{"status":"ok","timestamp":1681447031758,"user_tz":-540,"elapsed":469,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"8427491d-cebd-4c07-b880-7d1215cb8f5e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(23631, 90)"]},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["## 10경기 이상의 표본을 가진 애들만 추출\n","cnt = pd.DataFrame(data.accessId.value_counts())\n","over10 = list(cnt[cnt.accessId>=10].index)\n","data = data[data.accessId.apply(lambda x : x in over10)]"],"metadata":{"id":"ciul79XODc4Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.accesId.value_counts().value_counts() # 최근 경기 수 나열"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DuG8lPyMEBkv","executionInfo":{"status":"ok","timestamp":1681447272635,"user_tz":-540,"elapsed":6,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"8419996a-b8f3-46f5-c131-1236f56ed38a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["17    284\n","16    268\n","18    230\n","15    202\n","19    131\n","14    130\n","13     70\n","12     55\n","20     46\n","11     24\n","10     15\n","Name: id, dtype: int64"]},"metadata":{},"execution_count":102}]},{"cell_type":"markdown","source":["## 포메이션의 변경이 없는 대상 확인"],"metadata":{"id":"HJd_ikTBFFYA"}},{"cell_type":"code","source":["data['id_formation'] = data['id'] +'_'+ data['formation']"],"metadata":{"id":"zBGFGYhkF7uW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["id_per_formation = pd.DataFrame(data.groupby(['id_formation']).size(),columns=['cnt'])\n","id_per_formation.reset_index(inplace=True)\n","\n","data = pd.merge(data,id_per_formation,how='left',on='id_formation')\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":473},"id":"C-DR5n1pEbaS","executionInfo":{"status":"ok","timestamp":1681448172493,"user_tz":-540,"elapsed":484,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"9198a04c-3d36-400f-dd94-9ce1fab88ffe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    matchId            matchDate  matchType  \\\n","0  6430c714a4ebcc072d13f3e7  2023-04-08T10:54:55         50   \n","1  642dcb56dc1ac4544c53deb8  2023-04-06T04:37:10         50   \n","2  642c09958e38507a9ae58bc4  2023-04-04T20:37:05         50   \n","3  642b2e2be02c06eebd0216c2  2023-04-04T05:01:48         50   \n","4  6426c6325f5c0fd461f34f51  2023-03-31T20:50:42         50   \n","\n","                                           matchInfo  \\\n","0  {'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...   \n","1  {'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...   \n","2  {'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...   \n","3  {'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...   \n","4  {'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...   \n","\n","                         id                  accessId  possession nickname  \\\n","0  4b0a833e4121d0c3f6dc9a2e  4b0a833e4121d0c3f6dc9a2e        0.53      솔깃한   \n","1  4b0a833e4121d0c3f6dc9a2e  4b0a833e4121d0c3f6dc9a2e        0.62      솔깃한   \n","2  4b0a833e4121d0c3f6dc9a2e  4b0a833e4121d0c3f6dc9a2e        0.46      솔깃한   \n","3  4b0a833e4121d0c3f6dc9a2e  4b0a833e4121d0c3f6dc9a2e        0.55      솔깃한   \n","4  4b0a833e4121d0c3f6dc9a2e  4b0a833e4121d0c3f6dc9a2e        0.47      솔깃한   \n","\n","  matchResult  shootInPenalty  ...  center_fw_one  center_mf_one  side_fw_one  \\\n","0           패               2  ...           21.0      31.666667         22.5   \n","1           승               2  ...           34.0      34.333333         30.0   \n","2           패               3  ...           40.0      23.333333         17.5   \n","3           패               2  ...           30.0      36.333333         18.5   \n","4           패               1  ...           25.0      34.000000         24.5   \n","\n","   side_df_one  center_one  side_one  line2_one  formation  \\\n","0         14.0       29.00     18.25       28.0        451   \n","1         16.0       34.25     23.00       32.6        451   \n","2         12.0       27.50     14.75       21.0        451   \n","3         15.5       34.75     17.00       29.2        451   \n","4         13.5       31.75     19.00       30.2        451   \n","\n","                   id_formation  cnt  \n","0  4b0a833e4121d0c3f6dc9a2e_451   13  \n","1  4b0a833e4121d0c3f6dc9a2e_451   13  \n","2  4b0a833e4121d0c3f6dc9a2e_451   13  \n","3  4b0a833e4121d0c3f6dc9a2e_451   13  \n","4  4b0a833e4121d0c3f6dc9a2e_451   13  \n","\n","[5 rows x 92 columns]"],"text/html":["\n","  <div id=\"df-352a72d6-45b0-4799-b7d4-4591dc17aecc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>matchId</th>\n","      <th>matchDate</th>\n","      <th>matchType</th>\n","      <th>matchInfo</th>\n","      <th>id</th>\n","      <th>accessId</th>\n","      <th>possession</th>\n","      <th>nickname</th>\n","      <th>matchResult</th>\n","      <th>shootInPenalty</th>\n","      <th>...</th>\n","      <th>center_fw_one</th>\n","      <th>center_mf_one</th>\n","      <th>side_fw_one</th>\n","      <th>side_df_one</th>\n","      <th>center_one</th>\n","      <th>side_one</th>\n","      <th>line2_one</th>\n","      <th>formation</th>\n","      <th>id_formation</th>\n","      <th>cnt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6430c714a4ebcc072d13f3e7</td>\n","      <td>2023-04-08T10:54:55</td>\n","      <td>50</td>\n","      <td>{'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e</td>\n","      <td>0.53</td>\n","      <td>솔깃한</td>\n","      <td>패</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>21.0</td>\n","      <td>31.666667</td>\n","      <td>22.5</td>\n","      <td>14.0</td>\n","      <td>29.00</td>\n","      <td>18.25</td>\n","      <td>28.0</td>\n","      <td>451</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e_451</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>642dcb56dc1ac4544c53deb8</td>\n","      <td>2023-04-06T04:37:10</td>\n","      <td>50</td>\n","      <td>{'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e</td>\n","      <td>0.62</td>\n","      <td>솔깃한</td>\n","      <td>승</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>34.0</td>\n","      <td>34.333333</td>\n","      <td>30.0</td>\n","      <td>16.0</td>\n","      <td>34.25</td>\n","      <td>23.00</td>\n","      <td>32.6</td>\n","      <td>451</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e_451</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>642c09958e38507a9ae58bc4</td>\n","      <td>2023-04-04T20:37:05</td>\n","      <td>50</td>\n","      <td>{'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e</td>\n","      <td>0.46</td>\n","      <td>솔깃한</td>\n","      <td>패</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>40.0</td>\n","      <td>23.333333</td>\n","      <td>17.5</td>\n","      <td>12.0</td>\n","      <td>27.50</td>\n","      <td>14.75</td>\n","      <td>21.0</td>\n","      <td>451</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e_451</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>642b2e2be02c06eebd0216c2</td>\n","      <td>2023-04-04T05:01:48</td>\n","      <td>50</td>\n","      <td>{'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e</td>\n","      <td>0.55</td>\n","      <td>솔깃한</td>\n","      <td>패</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>30.0</td>\n","      <td>36.333333</td>\n","      <td>18.5</td>\n","      <td>15.5</td>\n","      <td>34.75</td>\n","      <td>17.00</td>\n","      <td>29.2</td>\n","      <td>451</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e_451</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6426c6325f5c0fd461f34f51</td>\n","      <td>2023-03-31T20:50:42</td>\n","      <td>50</td>\n","      <td>{'accessId': '4b0a833e4121d0c3f6dc9a2e', 'nick...</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e</td>\n","      <td>0.47</td>\n","      <td>솔깃한</td>\n","      <td>패</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>25.0</td>\n","      <td>34.000000</td>\n","      <td>24.5</td>\n","      <td>13.5</td>\n","      <td>31.75</td>\n","      <td>19.00</td>\n","      <td>30.2</td>\n","      <td>451</td>\n","      <td>4b0a833e4121d0c3f6dc9a2e_451</td>\n","      <td>13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 92 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-352a72d6-45b0-4799-b7d4-4591dc17aecc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-352a72d6-45b0-4799-b7d4-4591dc17aecc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-352a72d6-45b0-4799-b7d4-4591dc17aecc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":131}]},{"cell_type":"code","source":["data = data[data.cnt >= 10]"],"metadata":{"id":"torxOqycFKRU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["user_data = data.groupby('id_formation').mean()\n","user_data.reset_index(inplace=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4Fhx0fxKH-Mv","executionInfo":{"status":"ok","timestamp":1681448822883,"user_tz":-540,"elapsed":20,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"7fed8d5f-bd2d-4d7f-e156-f40f2487b91c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-139-d138e87ffa00>:1: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n","  user_data = data.groupby('id_formation').mean()\n"]}]},{"cell_type":"markdown","source":["## 최종 데이터 저장"],"metadata":{"id":"GXXGUCBaKRIB"}},{"cell_type":"code","source":["#user_data.to_csv('')"],"metadata":{"id":"rxM1_uXj5fl-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 분석(군집화) 방법 선정\n","## 4가지 군집화 : kmeans, agg, meanshift, spectral\n","## 3가지 거리 지표 : euclidean manhattan cos\n","## 2가지 데이터 : 표준화, PCA\n","총 24개의 지표에 대해 확인\n","\n","밑에 간단한 시각화를 통해 결론은 결국 해석으로 귀결될 것으로 판단.\n","1. 데이터의 분포를 보면 뭉쳐있어 단순 거리기반으로는 한계가 있어보임\n","2. 실루엣 점수가 낮을것으로 예상\n","3. inertia도 elbow가 뚜렷하지 않을 것으로 예상\n","\n","# 데이터와 거리 지표를 기준으로 코드를 나누어 진행."],"metadata":{"id":"by8rwgsb6tof"}},{"cell_type":"markdown","source":["## Simple EDA"],"metadata":{"id":"JWzzR3mF1Gnr"}},{"cell_type":"code","source":["user_data = pd.merge(user_data,data[['id_formation','formation']],on='id_formation',how='left')\n","user_data.drop_duplicates(inplace=True)"],"metadata":{"id":"K0DazwBpcfbM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = user_data[['in_rate','heading_rate','short_rate','long_rate','side_one','center_one','defence_fw','formation']]\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"yNnKygPWa0SX","executionInfo":{"status":"ok","timestamp":1681459457009,"user_tz":-540,"elapsed":494,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"c5a602ee-32ab-45cc-ee14-45555a3dcc8e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        in_rate  heading_rate  short_rate  long_rate   side_one  center_one  \\\n","0      0.450704      0.130556    0.880041   0.035906  14.525000   42.766667   \n","10     0.368000      0.129230    0.779673   0.068342  19.953125   35.046875   \n","26     0.392000      0.429663    0.798512   0.060786  18.266667   36.000000   \n","41     0.373333      0.154545    0.772228   0.058769  18.454545   28.454545   \n","52     0.669643      0.121354    0.610595   0.051902  18.515625   29.906250   \n","...         ...           ...         ...        ...        ...         ...   \n","18243  0.675676      0.057586    0.832230   0.010402  12.058824   34.000000   \n","18260  0.648649      0.026984    0.785109   0.035314  16.464286   36.571429   \n","18274  0.393939      0.161253    0.685540   0.075551  21.450000   26.633333   \n","18289  0.226667      0.161710    0.806856   0.032023  17.475000   29.080000   \n","18299  0.561224      0.139709    0.780665   0.065776  18.000000   29.586667   \n","\n","       defence_fw formation  \n","0        5.700000       442  \n","10       4.187500       451  \n","26       7.600000       523  \n","41       8.000000       523  \n","52       3.562500       433  \n","...           ...       ...  \n","18243    4.352941       523  \n","18260    2.857143       451  \n","18274    3.600000       451  \n","18289    6.900000       523  \n","18299    4.866667       532  \n","\n","[1237 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-cb33b114-d13a-4481-a79e-172a26a62c6d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>in_rate</th>\n","      <th>heading_rate</th>\n","      <th>short_rate</th>\n","      <th>long_rate</th>\n","      <th>side_one</th>\n","      <th>center_one</th>\n","      <th>defence_fw</th>\n","      <th>formation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.450704</td>\n","      <td>0.130556</td>\n","      <td>0.880041</td>\n","      <td>0.035906</td>\n","      <td>14.525000</td>\n","      <td>42.766667</td>\n","      <td>5.700000</td>\n","      <td>442</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.368000</td>\n","      <td>0.129230</td>\n","      <td>0.779673</td>\n","      <td>0.068342</td>\n","      <td>19.953125</td>\n","      <td>35.046875</td>\n","      <td>4.187500</td>\n","      <td>451</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>0.392000</td>\n","      <td>0.429663</td>\n","      <td>0.798512</td>\n","      <td>0.060786</td>\n","      <td>18.266667</td>\n","      <td>36.000000</td>\n","      <td>7.600000</td>\n","      <td>523</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>0.373333</td>\n","      <td>0.154545</td>\n","      <td>0.772228</td>\n","      <td>0.058769</td>\n","      <td>18.454545</td>\n","      <td>28.454545</td>\n","      <td>8.000000</td>\n","      <td>523</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>0.669643</td>\n","      <td>0.121354</td>\n","      <td>0.610595</td>\n","      <td>0.051902</td>\n","      <td>18.515625</td>\n","      <td>29.906250</td>\n","      <td>3.562500</td>\n","      <td>433</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>18243</th>\n","      <td>0.675676</td>\n","      <td>0.057586</td>\n","      <td>0.832230</td>\n","      <td>0.010402</td>\n","      <td>12.058824</td>\n","      <td>34.000000</td>\n","      <td>4.352941</td>\n","      <td>523</td>\n","    </tr>\n","    <tr>\n","      <th>18260</th>\n","      <td>0.648649</td>\n","      <td>0.026984</td>\n","      <td>0.785109</td>\n","      <td>0.035314</td>\n","      <td>16.464286</td>\n","      <td>36.571429</td>\n","      <td>2.857143</td>\n","      <td>451</td>\n","    </tr>\n","    <tr>\n","      <th>18274</th>\n","      <td>0.393939</td>\n","      <td>0.161253</td>\n","      <td>0.685540</td>\n","      <td>0.075551</td>\n","      <td>21.450000</td>\n","      <td>26.633333</td>\n","      <td>3.600000</td>\n","      <td>451</td>\n","    </tr>\n","    <tr>\n","      <th>18289</th>\n","      <td>0.226667</td>\n","      <td>0.161710</td>\n","      <td>0.806856</td>\n","      <td>0.032023</td>\n","      <td>17.475000</td>\n","      <td>29.080000</td>\n","      <td>6.900000</td>\n","      <td>523</td>\n","    </tr>\n","    <tr>\n","      <th>18299</th>\n","      <td>0.561224</td>\n","      <td>0.139709</td>\n","      <td>0.780665</td>\n","      <td>0.065776</td>\n","      <td>18.000000</td>\n","      <td>29.586667</td>\n","      <td>4.866667</td>\n","      <td>532</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1237 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb33b114-d13a-4481-a79e-172a26a62c6d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cb33b114-d13a-4481-a79e-172a26a62c6d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cb33b114-d13a-4481-a79e-172a26a62c6d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":323}]},{"cell_type":"code","source":["df.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":343},"id":"BJDpo0l9_D4-","executionInfo":{"status":"ok","timestamp":1681459459559,"user_tz":-540,"elapsed":454,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"be35acf8-89a3-4be2-94fe-e1f88b9b0bd2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-324-2f6f6606aa2c>:1: FutureWarning:\n","\n","The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["               in_rate  heading_rate  short_rate  long_rate  side_one  \\\n","in_rate       1.000000     -0.414932    0.032355  -0.174219  0.025675   \n","heading_rate -0.414932      1.000000   -0.258018   0.428485  0.059299   \n","short_rate    0.032355     -0.258018    1.000000  -0.292023  0.167373   \n","long_rate    -0.174219      0.428485   -0.292023   1.000000 -0.057169   \n","side_one      0.025675      0.059299    0.167373  -0.057169  1.000000   \n","center_one    0.092164     -0.243057    0.476015  -0.382494  0.333778   \n","defence_fw   -0.070024      0.055920   -0.187409   0.082407 -0.204506   \n","\n","              center_one  defence_fw  \n","in_rate         0.092164   -0.070024  \n","heading_rate   -0.243057    0.055920  \n","short_rate      0.476015   -0.187409  \n","long_rate      -0.382494    0.082407  \n","side_one        0.333778   -0.204506  \n","center_one      1.000000   -0.081199  \n","defence_fw     -0.081199    1.000000  "],"text/html":["\n","  <div id=\"df-9695e59a-179c-4c98-b071-80d04215000d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>in_rate</th>\n","      <th>heading_rate</th>\n","      <th>short_rate</th>\n","      <th>long_rate</th>\n","      <th>side_one</th>\n","      <th>center_one</th>\n","      <th>defence_fw</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>in_rate</th>\n","      <td>1.000000</td>\n","      <td>-0.414932</td>\n","      <td>0.032355</td>\n","      <td>-0.174219</td>\n","      <td>0.025675</td>\n","      <td>0.092164</td>\n","      <td>-0.070024</td>\n","    </tr>\n","    <tr>\n","      <th>heading_rate</th>\n","      <td>-0.414932</td>\n","      <td>1.000000</td>\n","      <td>-0.258018</td>\n","      <td>0.428485</td>\n","      <td>0.059299</td>\n","      <td>-0.243057</td>\n","      <td>0.055920</td>\n","    </tr>\n","    <tr>\n","      <th>short_rate</th>\n","      <td>0.032355</td>\n","      <td>-0.258018</td>\n","      <td>1.000000</td>\n","      <td>-0.292023</td>\n","      <td>0.167373</td>\n","      <td>0.476015</td>\n","      <td>-0.187409</td>\n","    </tr>\n","    <tr>\n","      <th>long_rate</th>\n","      <td>-0.174219</td>\n","      <td>0.428485</td>\n","      <td>-0.292023</td>\n","      <td>1.000000</td>\n","      <td>-0.057169</td>\n","      <td>-0.382494</td>\n","      <td>0.082407</td>\n","    </tr>\n","    <tr>\n","      <th>side_one</th>\n","      <td>0.025675</td>\n","      <td>0.059299</td>\n","      <td>0.167373</td>\n","      <td>-0.057169</td>\n","      <td>1.000000</td>\n","      <td>0.333778</td>\n","      <td>-0.204506</td>\n","    </tr>\n","    <tr>\n","      <th>center_one</th>\n","      <td>0.092164</td>\n","      <td>-0.243057</td>\n","      <td>0.476015</td>\n","      <td>-0.382494</td>\n","      <td>0.333778</td>\n","      <td>1.000000</td>\n","      <td>-0.081199</td>\n","    </tr>\n","    <tr>\n","      <th>defence_fw</th>\n","      <td>-0.070024</td>\n","      <td>0.055920</td>\n","      <td>-0.187409</td>\n","      <td>0.082407</td>\n","      <td>-0.204506</td>\n","      <td>-0.081199</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9695e59a-179c-4c98-b071-80d04215000d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9695e59a-179c-4c98-b071-80d04215000d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9695e59a-179c-4c98-b071-80d04215000d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":324}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# 데이터프레임 df의 모든 변수들에 대한 히스토그램을 그립니다.\n","fig, axs = plt.subplots(nrows=len(df.columns)//3 +1, ncols=3, figsize=(15, 5*len(df.columns)//3+1))\n","\n","for i, var in enumerate(df.columns):\n","    row = i // 3\n","    col = i % 3\n","    sns.histplot(data=df, x=var, ax=axs[row, col])\n","\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"6x9U2i5vv-In","executionInfo":{"status":"ok","timestamp":1681459475576,"user_tz":-540,"elapsed":3777,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"91890135-b328-4940-d7fc-436e53c70974"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1400 with 9 Axes>"],"image/png":"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Ha6GhgauRgfaIMZrAAACH+M1AADBo0VXon/22WcaPny4y/3XXXedNm/efNZFAWi5sHCzTBHuLWHhZn+XC8CLGK8BAAh8jNcAAASPFoXolZWVzV61ajKZ9H//939nXdRPHTp0SLfddpvi4+MVFRWlvn37atOmTY79hmFo1qxZSkxMVFRUlDIyMrRnzx6P1gAAQDDxx3gNAABahvEaAIDg0aIQ/fzzz9f27dtd7t+2bZsSExPPuqhTvvvuOw0ePFjh4eH65z//qR07duipp55Sp06dHG3mzp2rBQsWaNGiRSovL1eHDh2UmZmpEydOeKwOAACCia/HawAA0HKM1wAABI8WhejXX3+98vPzmwyojx8/roceekg33nijx4p74oknlJycrMWLF+vKK69USkqKrrvuOl144YWSfrwKvaioSDNnzlRWVpb69eunl19+WYcPH9bKlStdnre+vl41NTVOCwAAbYWvx2sAANByjNcAAASPFoXoM2fO1NGjR3XxxRdr7ty5evPNN/Xmm2/qiSeeUK9evXT06FH95S9/8Vhxb731lgYNGqSbb75ZXbp00YABA/TCCy849ldUVMhqtSojI8OxLSYmRmlpaSorK3N53sLCQsXExDiW5ORkj9UMAIC/+Xq8BgAALcd4DQBA8GhRiG6xWPTxxx/r0ksvVV5enm666SbddNNNevDBB3XppZfqww8/lMVi8VhxX3/9tZ577jn17NlT7733nu6++27dc889Wrp0qSTJarU66vp5naf2NSUvL0/Hjh1zLAcOHPBYzQAA+Juvx2sAANBy/hqvue8YAAAtZ2rpAd27d9e7776r7777Tnv37pVhGOrZs6fTPOWeYrfbNWjQIM2ZM0eSNGDAAG3fvl2LFi3S+PHjW31es9kss9nsqTIBAAg4vhyvAQBA6/h6vD5137FrrrlG//znP3Xeeedpz549Td53bOnSpUpJSVF+fr4yMzO1Y8cORUZGeqUuAAACXYtD9FM6deqkK664wpO1nCYxMVGXXHKJ07bU1FT9v//3/yRJCQkJkn68q/lPb7hSWVmpyy67zKu1AQAQDHwxXgMAgLPjq/H6p/cdOyUlJcXx/z+/75gkvfzyy7JYLFq5cqXGjh172jnr6+tVX1/vWOeeYwCAtqhF07n42uDBg7Vr1y6nbbt371b37t0l/TjYJyQkqLS01LG/pqZG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whv1Hzp0SLfddpvi4+MVFRWlvn37atOmTV7qAdqj9evXa+TIkUpKSlJISIhWrlzptN8ff4+0RWd6nu+44w6FhIQ4LcOHD/dPsUHKnTHrxIkTmjx5suLj43XuuedqzJgxqqys9FPFwcmd53no0KGn/TzfddddfqoYbVmwj2FtYWwI9vfetvCe9txzz6lfv36Kjo5WdHS00tPT9c9//tOxP5Cf/1PO1IdAfw1+rqnPnsHwOvxUU30I9Nfh4YcfPq2+3r17O/YH4mvQLkP0V199Vbm5uXrooYe0ZcsW9e/fX5mZmaqqqmqy/ccff6zf/va3mjBhgj799FONGjVKo0aN0vbt2x1t5s6dqwULFmjRokUqLy9Xhw4dlJmZqRMnTgRFH3744Qdt2bJF+fn52rJli9544w3t2rVLv/nNb4Ki/p9asWKFNmzYoKSkJK/U7q36v/rqKw0ZMkS9e/fW2rVrtW3bNuXn5ysyMjIo6s/NzVVJSYn+9re/aefOnZo6dapycnL01ltvebz+1vThhx9+0AUXXKDHH39cCQkJHjlnoNW/bt06TZ48WRs2bNCqVatks9l03XXXqa6uLijqP2Xjxo36z//8T/Xr18/jdZ/ijfq/++47DR48WOHh4frnP/+pHTt26KmnnlKnTp281g+0P3V1derfv78WLlzY5H5f/z3SVp3peZak4cOH68iRI47l73//uw8rDH7ujFnTpk3TP/7xD73++utat26dDh8+rNGjR/ux6uDj7t8GEydOdPp5njt3rp8qRlsW7GNYWxgbgv29ty28p3Xt2lWPP/64Nm/erE2bNunaa69VVlaWvvjiC0mB/fyfcqY+SIH9GvyUq8+ewfA6nNLc5+dAfx369OnjVN+HH37o2BeQr4HRDl155ZXG5MmTHeuNjY1GUlKSUVhY2GT7W265xbjhhhuctqWlpRl//OMfDcMwDLvdbiQkJBhPPvmkY391dbVhNpuNv//9717ogef70JRPPvnEkGTs27fPM0X/hLfqP3jwoHH++ecb27dvN7p37248/fTTHq/dMLxT/6233mrcdtttXqn357xRf58+fYyCggKnNpdffrnxl7/8xYOV/1tL+/BTrn42zuacLeWN+n+uqqrKkGSsW7fubEptkrfq//77742ePXsaq1atMq6++mrj3nvv9VDFzrxR//Tp040hQ4Z4skygWZKMFStWONb98fdIe/Dz59kwDGP8+PFGVlaWX+ppq34+ZlVXVxvh4eHG66+/7mizc+dOQ5JRVlbmrzKDXlN/G3hzvAVcCfYxrK2MDcH+3ttW3tM6depk/Nd//VfQPf8/daoPhhE8r4Grz57B9Do09/k50F+Hhx56yOjfv3+T+wL1NWh3V6KfPHlSmzdvVkZGhmNbaGioMjIyVFZW1uQxZWVlTu0lKTMz09G+oqJCVqvVqU1MTIzS0tJcnjPQ+tCUY8eOKSQkRLGxsR6p+xRv1W+323X77bfr/vvvV58+fTxa8095o3673a533nlHF198sTIzM9WlSxelpaWd9hXBQK1fkq666iq99dZbOnTokAzD0Jo1a7R7925dd911AdEHf5zT34917NgxSVJcXJzHzil5t/7JkyfrhhtuOO3nzZO8Vf9bb72lQYMG6eabb1aXLl00YMAAvfDCC54oGXCLr/8eae/Wrl2rLl26qFevXrr77rv1r3/9y98lBbWfj1mbN2+WzWZz+nnu3bu3unXrxs/zWXD1t8GyZcvUuXNnXXrppcrLy9MPP/zgj/LQjrWVMSzYxoZgf+8N9ve0xsZGvfLKK6qrq1N6enrQPf/S6X04JRheA1efPYPpdTjT5+dAfx327NmjpKQkXXDBBcrOznZMZxyor4HJb4/sJ99++60aGxtlsVictlssFn355ZdNHmO1Wptsb7VaHftPbXPVxpO80YefO3HihKZPn67f/va3io6O9kzh/z9v1f/EE0/IZDLpnnvu8Wi9P+eN+quqqlRbW6vHH39cs2fP1hNPPKGSkhKNHj1aa9as0dVXXx3Q9UtScXGxJk2apK5du8pkMik0NFQvvPCCfvWrX3ms9rPpgz/O6c/Hstvtmjp1qgYPHqxLL73UI+c8xVv1v/LKK9qyZYs2btx4tiU2y1v1f/3113ruueeUm5urBx98UBs3btQ999yjiIgIjR8//mzLBs7I13+PtGfDhw/X6NGjlZKSoq+++koPPvigRowYobKyMoWFhfm7vKDT1JhltVoVERFx2sUc/Dy3nqu/DX73u9+pe/fuSkpK0rZt2zR9+nTt2rVLb7zxhh+rRXvTFsawYBsbgv29N5jf0z7//HOlp6frxIkTOvfcc7VixQpdcskl2rp1a9A8/676IAXHa9DcZ89g+T040+fnQH8d0tLStGTJEvXq1UtHjhzRI488ol/+8pfavn17wL4G7S5Ex5nZbDbdcsstMgxDzz33nL/LccvmzZv117/+VVu2bFFISIi/y2kxu90uScrKytK0adMkSZdddpk+/vhjLVq0yKMhurcUFxdrw4YNeuutt9S9e3etX79ekydPVlJSklevKkbTJk+erO3btzvNKRbIDhw4oHvvvVerVq3yyn0AfMFut2vQoEGaM2eOJGnAgAHavn27Fi1aRIgOtDFjx451/H/fvn3Vr18/XXjhhVq7dq2GDRvmx8qCU7CNWcHK1fM8adIkx//37dtXiYmJGjZsmL766itdeOGFvi4TCFrBNjYE+3tvML+n9erVS1u3btWxY8f0P//zPxo/frzWrVvn77JaxFUfLrnkkoB/DdrCZ093+hDor8OIESMc/9+vXz+lpaWpe/fueu211xQVFeXHylxrd9O5dO7cWWFhYafd0bWystLlzeISEhKabX/qvy0559nwRh9OORWg79u3T6tWrfL4VeiSd+r/4IMPVFVVpW7duslkMslkMmnfvn2677771KNHj4Cvv3PnzjKZTI5/uT0lNTXV8XUWT/FG/cePH9eDDz6o+fPna+TIkerXr59ycnJ06623at68eR6tv7V98Mc5/fVYOTk5evvtt7VmzRp17dr1rM/3c96of/PmzaqqqtLll1/u+B1et26dFixYIJPJpMbGRk+ULsl7z39iYqJPfocBV3z99wj+7YILLlDnzp21d+9ef5cSdFyNWQkJCTp58qSqq6ud2vPz3Dot+dsgLS1Nkvh5hk+1xTEskMeGYH/vDfb3tIiICF100UUaOHCgCgsL1b9/f/31r38Nmudfct2HpgTaa3Cmz54WiyXgX4fWfH4OtNfh52JjY3XxxRdr7969Afu70O5C9IiICA0cOFClpaWObXa7XaWlpU7zN/1Uenq6U3tJWrVqlaN9SkqKEhISnNrU1NSovLzc5TkDrQ/SvwP0PXv26P3331d8fLzHa/dW/bfffru2bdumrVu3OpakpCTdf//9eu+99wK+/oiICF1xxRXatWuXU5vdu3ere/fuAV+/zWaTzWZTaKjzW0pYWJjjKntPak0f/HFOXz+WYRjKycnRihUrtHr1aqWkpHii3NN4o/5hw4bp888/d/odHjRokLKzs7V161aPfgXWW8//4MGDffI7DLji679H8G8HDx7Uv/71LyUm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44031LVrVxUUFOjIkSOOz9xfffWVhg8frjFjxmjbtm169dVX9eGHHyonJ8eptnnz5ql///769NNPlZ+f32w/6urqlJmZqU6dOmnjxo16/fXX9f777592zubqlaScnByVlZXplVde0bZt23TzzTdr+PDhTpkC0O4YANqMq6++2rj33nsNwzCM3/zmN0Zqaqqxfv16Y+vWrUZmZqZx0UUXGSdPnjQMwzAWL15shIeHGxkZGcbGjRuNzZs3G6mpqcbvfvc7x/lmz55txMXFGW+88Yaxc+dO46677jKio6ONrKwst+s599xzjfvvv9/48ssvjS+//NIwDMN4+umnjdWrVxsVFRVGaWmp0atXL+Puu+82DMMw6uvrjaKiIiM6Oto4cuSIceTIEeP77783DMMw/vCHPxhXXXWVsX79emPv3r3Gk08+aZjNZmP37t0eegYBAPCNw4cPGyaTyZg/f75RUVFhbNu2zVi4cKHx/fffG+PHj3caa++++26jW7duxvvvv29s27bNuPHGG42OHTs6xnzDOLsxctOmTUZoaKhRUFBg7Nq1y1i8eLERFRVlLF682NGme/fuRlxcnLFw4UJjz549RmFhoREaGuoY20+ePGmkpqYav//9741t27YZO3bsMH73u98ZvXr1Murr6z31tAEA4HE1NTWG2Ww2XnjhhdP2/fd//7fRq1cvw263O7bV19cbUVFRxnvvvWcYhmGMHz/e6N69u9HQ0OBoc/PNNxu33nqrY7179+7G008/7XTuCRMmGJMmTXLa9sEHHxihoaHG8ePHHceNGjXK7b48//zzRqdOnYza2lrHtnfeeccIDQ01rFarW/Xu27fPCAsLMw4dOuR07mHDhhl5eXlu1wK0NSZ/h/gAPG/Pnj1666239NFHH+mqq66SJC1btkzJyclauXKlbr75ZkmSzWbTokWLdOGFF0r68V+bCwoKHOcpLi5WXl6ebrrpJknSM888o3fffbdFtfTs2VNz58512vbTG6H16NFDs2fP1l133aVnn31WERERiomJUUhIiBISEhzt9u/fr8WLF2v//v1KSkqSJP35z39WSUmJFi9erDlz5rSoLgAA/OnIkSNqaGjQ6NGj1b17d0lS3759T2tXW1urF198UX/72980bNgwSdLSpUvVtWtXR5uzHSPnz5+vYcOGOa5uu/jii7Vjxw49+eSTuuOOOxztrr/+ev3pT3+SJE2fPl1PP/201qxZo169eunVV1+V3W7Xf/3Xfzm+pr548WLFxsZq7dq1uu6661r5TAEA4F07d+5UfX29Y5z9qc8++0x79+5Vx44dnbafOHFCX331lWO9T58+CgsLc6wnJibq888/b/ZxP/vsM23btk3Lli1zbDMMQ3a7XRUVFUpNTZUkDRo0qEV96d+/vzp06ODYNnjwYNntdu3atUsWi+WM9X7++edqbGzUxRdf7HTu+vp6xcfHu10L0NYQogNt0M6dO2UymZSWlubYFh8fr169emnnzp2Obeecc44jQJd+HDirqqokSceOHVNlZaWuvPJKx/6wsDANHDhQdrvd7VoGDhx42rb3339fhYWF+vLLL1VTU6OGhgadOHFCP/zwg84555wmz8NADgBoS/r3769hw4apb9++yszM1HXXXaf/+I//UKdOnZzaffXVVzp58qTTmB4XF6devXo51s92jNy5c6eysrKctg0ePFhFRUVqbGx0fMju16+fY/+pf+w+9XeDuyEDAACBJioqyuW+2tpaDRw40CnoPuW8885z/H94eLjTvpCQkDN+bq6trdUf//hH3XPPPaft69atm+P/fxqIe0pz9dbW1iosLEybN292Ctol6dxzz/V4LUCwIEQH2rGmBk7DMDz6GD8f8L/55hvdeOONuvvuu/XYY48pLi5OH374oSZMmKCTJ0+6DNEZyAEAbUlYWJhWrVqljz/+WP/7v/+r4uJi/eUvf1F5eXmLz+WrMfJMH7jdCRkAAAg0PXv2VFRUlEpLS/WHP/zBad/ll1+uV199VV26dFF0dHSrHyMiIkKNjY2nnXvHjh266KKLWn3en0tNTdWSJUtUV1fn+Cz+0UcfKTQ01Okf4JszYMAANTY2qqqqSr/85S89VhsQ7LixKNAGpaamqqGhwemD+L/+9S/t2rVLl1xyiVvniImJkcVi0caNGx3bGhsbtWXLlrOqbfPmzbLb7Xrqqaf0i1/8QhdffLEOHz7s1KapPzB+OpBfdNFFTstPp30BACBYhISEaPDgwXrkkUf06aefKiIiQitWrHBqc+GFFyo8PNxpTP/uu++0e/dux/rZjpGpqan66KOPnLZ99NFHuvjii08L5V25/PLLtWfPHnXp0uW0GmJiYtw6BwAA/hAZGanp06frgQce0Msvv6yvvvpKGzZs0Isvvqjs7Gx17txZWVlZ+uCDD1RRUaG1a9fqnnvu0cGDB91+jB49emj9+vU6dOiQvv32W0k/To328ccfKycnR1u3btWePXv05ptvnnYT0JbIzs5WZGSkxo8fr+3bt2vNmjWaMmWKbr/9dsdULmdy8cUXKzs7W+PGjdMbb7yhiooKffLJJyosLNQ777zT6tqAYEeIDrRBPXv2VFZWliZOnKgPP/xQn332mW677Tadf/75p31duzlTpkxRYWGh3nzzTe3atUv33nuvvvvuO8dcp61x0UUXyWazqbi4WF9//bX++7//W4sWLXJq06NHD9XW1qq0tFTffvutfvjhBwZyAECbUl5erjlz5mjTpk3av3+/3njjDf3f//2fY/7TU84991xNmDBB999/v1avXq3t27frjjvuUGjov/+MP9sx8r777lNpaakeffRR7d69W0uXLtUzzzyjP//5z273x1MhAwAA/pCfn6/77rtPs2bNUmpqqm699VZVVVXpnHPO0fr169WtWzeNHj1aqampmjBhgk6cONGiK9MLCgr0zTff6MILL3R8Q6tfv35at26ddu/erV/+8pcaMGCAZs2a5bi/SWucc845eu+993T06FFdccUV+o//+A8NGzZMzzzzTIvOs3jxYo0bN0733XefevXqpVGjRmnjxo1O08wA7Y6/72wKwHOuvvpq49577zUMwzCOHj1q3H777UZMTIwRFRVlZGZmGrt373a0Xbx4sRETE+N0/IoVK4yfvi3YbDYjJyfHiI6ONjp16mRMnz7duPnmm42xY8e2uJ6fmj9/vpGYmOio6+WXXzYkGd99952jzV133WXEx8cbkoyHHnrIMAzDOHnypDFr1iyjR48eRnh4uJGYmGjcdNNNxrZt29yqBwCAQLFjxw4jMzPTOO+88wyz2WxcfPHFRnFxsWEYhjF+/HgjKyvL0fb77783brvtNuOcc84xLBaLMXfu3NPG2LMdI//nf/7HuOSSS4zw8HCjW7duxpNPPum0v3v37sbTTz/ttK1///6OMdowDOPIkSPGuHHjjM6dOxtms9m44IILjIkTJxrHjh1r0XMDAAAABJoQw/DwBMgA2iy73a7U1FTdcsstevTRR/1dDgAAAAAAAOB1TOcCwKV9+/bphRde0O7du/X555/r7rvvVkVFhX73u9/5uzQAAAAAANqVOXPm6Nxzz21yGTFi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AFB+5UqiZ2Zm6pFHHlFiYqIaNGggScrKytJ9992n1atX67bbbqvIGAEAQDmwXgMAAAAAcOucy7PThAkTdOHCBR05ckS//vqrfv31Vx0+fFg5OTmaOHFiRccIAADKgfUaAAAAAIBbV64r0Tdt2qStW7cqODjYXNa+fXvFx8fzQ2UAADgI1msAAAAAAG5dua5ELywslKur603lrq6uKiwsvOWgAADArWO9BgAAAADg1pUrid63b19NmjRJP/30k7ns3LlzmjJlivr161dhwQEAgPJjvQYAAAAA4NaVK4n+1ltvKScnR82bN1erVq3UqlUrtWjRQjk5OXrzzTcrOkYAAFAOrNcAAAAAANy6ct0TPTAwUAcOHNDWrVv1/fffS5KCg4MVFhZWocEBAIDyY70GAAAAAODWlelK9G3btql9+/bKycmRk5OT7r//fk2YMEETJkzQ3XffrTvuuEPffPNNZcUKAABKgfUaAAAAAICKU6Yk+oIFCzR27Fh5enreVOfl5aUnn3xS8+bNq7DgAABA2bFeAwAAAABQccqURP/22281YMAAq/X9+/dXcnLyLQcFAADKj/UaAAAAAICKU6Ykuslkkqurq9X6WrVq6eeff77loAAAQPlV9Hq9cOFCderUSZ6envL09FRoaKi++OILc/3Vq1cVGRmpRo0aqV69eho6dKhMJpNFH2lpaRo0aJDq1KkjHx8fTZ06VdeuXSv74AAAAAAAsLEyJdGbNGmiw4cPW63/7rvv5O/vf8tBAQCA8qvo9bpp06aaM2eOkpOTtX//fvXt21eDBw/WkSNHJElTpkzRZ599pjVr1mj79u366aef9NBDD5n3Lygo0KBBg5SXl6ddu3ZpxYoVWr58uWbOnFn+QQIAAAAAYCNlSqI/8MADmjFjhq5evXpT3ZUrVxQbG6s///nPFRYcAAAou4perx988EE98MADat26tdq0aaOXXnpJ9erV0+7du5Wdna0lS5Zo3rx56tu3r7p27aply5Zp165d2r17tyTpyy+/1NGjR/X++++rS5cuGjhwoF544QXFx8crLy+vwsYNAAAAAEBlqFWWxtOnT9cnn3yiNm3aKCoqSm3btpUkff/994qPj1dBQYGee+65SgkUAACUTmWu1wUFBVqzZo0uXbqk0NBQJScnKz8/X2FhYeY27dq1U1BQkJKSktS9e3clJSWpY8eO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Ro0apXr16snf31+vvfaaRX1ubq6efvppNWnSRHXr1lVISIgSExMlSYmJieYrz/v27SsnJydz3Y4dO9SrVy/Vrl1bgYGBmjhxoi5dumTut3nz5nr55Zf1xBNPqH79+goKCtK7775r8dz//e9/NXz4cHl7e6tu3brq1q2b9uzZY65ft26d7rrrLnl4eKhly5aaNWuWrl27VuKYmzdvro8//ljvvfeenJyc9Pjjj6tbt2569dVXzW2GDBkiV1dXXbx40RyLk5OTTp48WfrJBQCgEj3++OOaMGGC0tLS5OTkpObNmys3N1cTJ06Uj4+PPDw8dO+992rfvn3mfRITE+Xk5KQvvvhCXbt2lbu7u3bs2KE+ffpowoQJmjx5sho2bChfX18tXrxYly5d0ujRo1W/fn3dfvvt+uKLL8x9FRQUaMyYMWrRooVq166ttm3b6vXXXzfXP//881qxYoXWrVsnJycn8+eEom7nsn37dt1zzz1yd3eXv7+/nn32WYs1vU+fPpo4caKeeeYZeXt7y8/PT88//3ylzi8AAABQWUiiA1XM1KlTtX37dq1bt05ffvmlEhMTdeDAAXN9VFSUkpKStHr1an333Xf661//qgEDBujEiRPq0aOHUlNTJUkff/yx0tPT1aNHD506dUoDBgzQ0KFD9d133+mDDz7Qjh07FBUVZfHcr732mrp166aDBw/qqaee0vjx4839Xbx4Ub1799a5c+e0fv16ffvtt3rmmWdUWFgoSfrmm280atQoTZo0SUePHtU777yj5cuX66WXXipxzPv27dOAAQP08MMPKz09Xa+//rp69+5t/g8AwzD0zTffqEGDBtqxY4ek37/cN2nSRLfffvstzzkAABXh9ddf1+zZs9W0aVOlp6dr3759euaZZ/Txxx9rxYoVOnDggG6//XaFh4fr119/tdj32Wef1Zw5c3Ts2DF16tRJkrRixQo1btxYe/fu1YQJEzR+/Hj99a9/VY8ePXTgwAH1799fI0eO1OXLlyVJhYWFatq0qdasWaOjR49q5syZ+uc//6kPP/xQkvT000/r4Ycf1oABA5Senm7+nHCjc+fO6YEHHtDdd9+tb7/9VgsXLtSSJUv04osvWrRbsWKF6tatqz179mju3LmaPXu2tmzZUhlTCwAAAFQuA0CVceHCBcPNzc348MMPzWW//PKLUbt2bWPSpEnG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\n"},"metadata":{}}]},{"cell_type":"code","source":["# 추가 이상치 제거\n","df = df[df.center_one > 15]\n","df = df[df.center_one < 46]\n","df = df[df.heading_rate < 0.5]\n","df = df[df.short_rate > 0.3]\n","df = df[df.defence_fw < 15]"],"metadata":{"id":"fij1QVorF-wm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# pairplot 그리기\n","sns.pairplot(data=df,hue='formation')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"17qnrQYpo_mzvmPWvgezDWz1La5EYrJ4m"},"id":"S1J82b0omqaW","executionInfo":{"status":"ok","timestamp":1681459603416,"user_tz":-540,"elapsed":48609,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"66923542-5e57-4440-edc2-c59b3139936c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","source":["from scipy.spatial import distance_matrix\n","\n","# 인접행렬 계산\n","dist_matrix = distance_matrix(X.values, X.values, p=2)\n","\n","# 홉킨스 통계량 계산\n","hopkins_statistic = np.sum(np.square(dist_matrix)) / (2 * (np.square(X.shape[0]) - X.shape[0]))\n","\n","print(hopkins_statistic)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BA-7lJzSmu8k","executionInfo":{"status":"ok","timestamp":1681451004187,"user_tz":-540,"elapsed":440,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"f0a1715d-87f4-4cd8-eea9-e893f07662a1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["7.005672609400326\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import calinski_harabasz_score\n","\n","# Calinski-Harabasz Index 계산\n","score = calinski_harabasz_score(X, kmeans.labels_)\n","print(\"Calinski-Harabasz Index:\", score)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KXIXgGwrm4XN","executionInfo":{"status":"ok","timestamp":1681451011468,"user_tz":-540,"elapsed":467,"user":{"displayName":"윕스","userId":"01753024869533167760"}},"outputId":"cc9c2fd6-f79a-426e-cac0-fecf2bdf2bc7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Calinski-Harabasz Index: 138.07294244217158\n"]}]}]}